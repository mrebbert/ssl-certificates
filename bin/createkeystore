#!/bin/sh

SSL_DIR=`dirname $0`/..

usage() {
    echo "Usage: $0 [-e [<environment>] -f [<hostname>] -t [client|server] -g [<hostgroup>] ]"
    exit 1
}

if [ $# -lt 1 ] ; then
    usage
fi
counter="0"
while getopts "he:f:t:g:" flag; do
    case $flag in
        e)
          ENVIRONMENT=$OPTARG
          ((counter+=1))
          ;;
        f)
          HOST=$OPTARG
          ((counter+=1))
          ;;
        t)
          TYPE=$OPTARG
          ((counter+=1))
          ;;
        g)
          HOSTGROUP=$OPTARG
          ((counter+=1))
          ;;
       \?)
          usage
          ;;
        *)
          usage
          ;;
    esac
done

if [ $counter -ne 4 ]; then
    usage
fi

#echo "ENVIRONMENT: $ENVIRONMENT"
#echo "HOST: $HOST"
#echo "TYPE: $TYPE"
#echo "HOSTGROUP: $HOSTGROUP"

if [ $TYPE != "server" ] && [ $TYPE != "client" ]; then
    usage
fi

. $SSL_DIR/conf/script.config

if [ $TYPE == 'client' ] ; then
        FILENAME_CERT_TYPE=$CLIENT_FILENAME_CERT_TYPE
        FILENAME=$HOST.$FILENAME_CERT_TYPE
        ALIAS="$HOST-$TYPE"
elif [ $TYPE == 'server' ] ; then
        FILENAME_CERT_TYPE=$SERVER_FILENAME_CERT_TYPE
        FILENAME=$HOSTGROUP.$FILENAME_CERT_TYPE
        ALIAS="$HOSTGROUP-$TYPE"
else
    usage
fi
#echo "FILENAME: "$FILENAME
#echo "ALIAS: "$ALIAS

PASSWD=`cat $PASSWORD_FILE`
#echo "PASSWD: "$PASSWD 


if [ $KEYTOOL = "" ] ; then
  echo "Please put keytool in the path"
  exit 1
fi

if [ $OPENSSL = "" ] ; then
  echo "Please put openssl in the path"
  exit 1
fi

if [ $JAVA = "" ] ; then
  echo "Please put java in the path"
  exit 1
fi

DOMAIN=$(echo "$HOST" | awk -F "." '{ for (i=2; i<NF; i++) printf $i"." ; print $NF}')
#echo "DOMAIN: "$DOMAIN

KEY=$CERT_DIR/$ENVIRONMENT/$FILENAME.$KEY_EXT
KEY_DER=$CERT_DIR/$ENVIRONMENT/$FILENAME.$KEY_EXT.der
CERT=$CERT_DIR/$ENVIRONMENT/$FILENAME.$EXT
CERT_DER=$CERT_DIR/$ENVIRONMENT/$FILENAME.der
KEYSTORE=$CERT_DIR/$ENVIRONMENT/$FILENAME.jks

#echo "KEY: "$KEY
#echo "KEY_DER: "$KEY_DER
#echo "CERT: "$CERT
#echo "CERT_DER: "$CERT_DER
#echo "KEYSTORE: "$KEYSTORE

"$OPENSSL" pkcs8 -topk8 -nocrypt \
    -in $KEY \
    -out $KEY_DER \
    -outform der
rc=$?
if [ $rc != 0 ] ; then
   echo "OpenSSL: Could not convert key to DER(ExitCode: $rc)"
   exit 1
fi

"$OPENSSL" x509 \
    -in $CERT \
    -out $CERT_DER \
    -outform der
rc=$?
if [ $rc != 0 ] ; then
   echo "OpenSSL: Could not convert certificate to DER(ExitCode: $rc)"
   exit 1
fi

$JAVA -cp $BIN_DIR $IMPORT_KEY $KEY_DER $CERT_DER "$ALIAS" $KEYSTORE $PASSWD
rc=$?
if [ $rc != 0 ] ; then
   echo "ImportKey: Could not generate keystore.(ExitCode: $rc)"
   exit 1
fi

#CERTIFICATES=$(find ${CERT_DIR} -maxdepth 1 -name "*$DOMAIN.$EXT" -type f)

#for CERT in $CERTIFICATES ; do
#	echo "found certificate $CERT"
#	ALIAS=$(echo ${CERT} | awk -F "/" '{print $NF}' | awk -F "." '{print $1}')
#	if [ $CERT != $FILENAME ] ; then ## was HOSTNAME
#     "$KEYTOOL" -import -alias $ALIAS -file $CERT -noprompt \
#        -keystore $KEYSTORE -storepass $PASSWD
#      rc=$?
#      if [ $rc != 0 ] ; then
#          echo "Keytool: Could not import $CERT in keystore.(ExitCode: $rc)"
#          exit 1
#      fi
#   fi
#done

rm -f $KEY_DER
rm -f $CERT_DER

exit 0
